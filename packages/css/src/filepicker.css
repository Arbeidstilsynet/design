.at-filepicker {
  display: flex;
  flex-flow: column;
  width: 100%;
  max-width: 43rem;
  gap: var(--ds-size-1);

  &[data-disabled="true"] {
    opacity: var(--ds-disabled-opacity);
  }
}

.at-filepicker-dropzone-wrapper {
  position: relative;
}

.at-filepicker-dropzone {
  display: flex;
  width: 100%;
  --filepicker-dropzone-min-height: calc(var(--ds-size-30) + var(--ds-size-3));
  min-height: var(--filepicker-dropzone-min-height);
  padding: var(--ds-size-7) 0;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: var(--ds-size-1);
  border-radius: var(--ds-border-radius-default);
  border: 2px dashed var(--ds-color-info-border-default);
  background-color: var(--ds-color-background-default);
  color: var(--ds-color-text-default);
  cursor: pointer;

  &.has-error {
    border-color: var(--ds-color-danger-border-default);
  }

  &:hover:not(:disabled) {
    background-color: var(--ds-color-primary-background-tinted);
    border-color: var(--ds-color-info-border-default);
    border-style: solid;
  }

  & span {
    gap: var(--ds-size-2);
  }

  /* Ensure all child elements don't interfere with pointer events and inherit cursor */
  & * {
    pointer-events: none;
    cursor: inherit;
  }

  /* When disabled, restore pointer events for child elements but use disabled cursor */
  &:disabled {
    cursor: not-allowed;

    & * {
      pointer-events: auto;
      cursor: not-allowed;
    }
  }

  &[aria-busy="true"] {
    cursor: progress;
  }

  &.is-drag {
    border-style: solid; /* switch from dashed while dragging */
    border-color: var(--ds-color-info-base-default);
    background-color: var(--ds-color-info-surface-tinted);
    /* Optional subtle elevation */
    box-shadow: 0 0 0 1px var(--ds-color-info-border-subtle);
  }
}

.at-filepicker-files {
  display: flex;
  flex-direction: column;
  gap: var(--ds-size-2);
}

.at-filepicker-file {
  display: grid;
  grid-template-columns: auto 1fr auto auto;
  align-items: center;
  gap: var(--ds-size-2);
  padding: var(--ds-size-2) var(--ds-size-3);
  border: var(--ds-border-width-default) solid var(--ds-color-border-default);

  &--error {
    border-color: var(--ds-color-danger-border-default);
  }
}

.at-filepicker-file__content {
  display: flex;
  flex-direction: column;
  gap: var(--ds-size-1);
  min-width: 0; /* Allow text truncation */
}

.at-filepicker-file__name {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  min-width: 0;
}

.at-filepicker-file__error {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  min-width: 0;
}

.at-filepicker-file__size {
  white-space: nowrap;
  flex-shrink: 0;
}

.at-filepicker-file__remove {
  border-radius: var(--border-radius-default, 4px);
  border: var(--ds-border-width-default) solid
    var(--ds-color-primary-border-strong);
}

.at-filepicker-errors {
  display: flex;
  flex-direction: column;
  gap: var(--ds-size-2);
}

/* Responsive adjustments */
@container (max-width: 30rem) {
  .at-filepicker-file {
    padding: var(--ds-size-1) var(--ds-size-2);
  }

  .at-filepicker-file__content {
    gap: var(--ds-size-1);
  }
}
